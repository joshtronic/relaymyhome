#!/usr/bin/env bash
# The MIT License (MIT)
#
# Copyright (c) 2013 Rob Zimmerman
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# RelayMyHome -- v. 1.1
# Original script by Rob Zimmerman (https://www.github.com/taintedzodiac)
# See other generous contributors, plus view the source, readme, and license at https://github.com/taintedzodiac/relaymyhome
# Tested in OS X 10.8 (Mountain Lion) and Mavericks

wservice=`/usr/sbin/networksetup -listallnetworkservices | grep -Ei '(wi-fi|airport)'`
wifi=$(networksetup -listallhardwareports | awk "/$wservice/,/Ethernet/"' getline { print $2 }')

WirelessMAC=$(networksetup -getmacaddress $wifi | awk '{print $3}')
echo "Original MAC address is: $WirelessMAC"

cleanup()
{
    sudo ifconfig $wifi lladdr $WirelessMAC
    networksetup -setairportpower $wifi off
    networksetup -setairportpower $wifi on

    echo "Cycling of Relays has completed, MAC address reverted."
}

ctrl_c()
{
  # user quit midway through, so we should revert
  # the MAC address by calling our cleanup function
  echo "*** Interrupted ***"
  cleanup
  exit $?
}

# trap keyboard interrupt (control-c) or unexpected quit
trap ctrl_c SIGINT SIGTERM

if  [[ $1 == "full" || $1 == "quick" ]]
then
    # Generate a full list of 160 MACs when "full" mode is specified
    # To use full mode: ./relaymyhome full
    # Check the repo at github for more information.

    # Set the base MAC address
    baseAddr="4E:53:50:4F:4F:"

    # Legal characters for MAC (Limited range for first digit)
    CharsA=("0" "1" "2" "3" "4" "5" "6" "7" "8" "9")
    CharsB=("0" "1" "2" "3" "4" "5" "6" "7" "8" "9" "A" "B" "C" "D" "E" "F")

    # Create the addresses programmatically
    count=0
    for i in "${CharsA[@]}"
    do
        for j in "${CharsB[@]}"
        do
            mac=$baseAddr$i$j
            Addr+=($mac)
        done
    done

    if [[ $1 == "full" ]]
    then
      num=5
      echo "Full Mode enabled. Randomly seeding five addresses from full list."
    else
      num=2
      echo "Quick Mode enabled. Randomly seeding two addresses from full list."
    fi

    for a in $(seq 1 $num)
    do
        selectedAddr=${Addr[$RANDOM % ${#Addr[@]} ]}
        echo "Cycling WiFi..."
        sudo ifconfig $wifi lladdr $selectedAddr
        networksetup -setairportpower $wifi off
        networksetup -setairportpower $wifi on
        echo "Spoofing $wifi to $selectedAddr for 90 seconds ($a of $num)"
        sleep 90
    done


else
    # This set of MACs will be used in standard mode
    # Taken from: https://docs.google.com/spreadsheet/ccc?key=0AvvH5W4E2lIwdEFCUkxrM085ZGp0UkZlenp6SkJablE#gid=0
    # Usage: ./relaymyhome
    addr[0]='00:0D:67:15:2D:82'
    addr[1]='00:0D:67:15:D7:21'
    addr[2]='00:0D:67:15:D5:44'
    addr[3]='00:0D:67:15:D2:59'
    addr[4]='00:0D:67:15:D6:FD'
    addr[5]='4E:53:50:4F:4F:40'
    addr[6]='4E:53:50:4F:4F:41'
    addr[7]='4E:53:50:4F:4F:42'
    addr[8]='4E:53:50:4F:4F:43'
    addr[9]='4E:53:50:4F:4F:44'
    addr[10]='4E:53:50:4F:4F:45'
    addr[11]='4E:53:50:4F:4F:46'
    addr[12]='4E:53:50:4F:4F:47'
    addr[13]='4E:53:50:4F:4F:48'
    addr[14]='4E:53:50:4F:4F:49'
    addr[15]='4E:53:50:4F:4F:4A'
    addr[16]='4E:53:50:4F:4F:4B'
    addr[17]='4E:53:50:4F:4F:4C'
    addr[18]='4E:53:50:4F:4F:4D'
    addr[19]='4E:53:50:4F:4F:4E'
    addr[20]='4E:53:50:4F:4F:4F'

    echo "Standard Mode enabled. Connecting to the five Nintendo World relays and the sixteen Homepass relays."
    n=1

    for a in "${addr[@]}"
    do
        echo "Cycling WiFi..."
        sudo ifconfig $wifi lladdr $a
        networksetup -setairportpower $wifi off
        networksetup -setairportpower $wifi on
        echo "Spoofing $wifi to $a for 90 seconds ($n of 21)"
        n=$((n+1))
        sleep 90
    done
fi

# ... and we are done

cleanup

echo "Time to check your StreetPasses!"
